// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "ataradaev@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comment": {
            "post": {
                "description": "checked  comment on forbidden words",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Comment"
                ],
                "summary": "check  Comment",
                "operationId": "Check comment for router",
                "parameters": [
                    {
                        "description": "структура комментарий",
                        "name": "Комментарий",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Комментарий прошел проверку",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "найдено запрещенные слова",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/word/{word}": {
            "post": {
                "description": "added forbidden word",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Addword"
                ],
                "summary": "Add  forbidden word in DB",
                "operationId": "add word",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Word",
                        "name": "word",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Слово добавлено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Comment": {
            "type": "object",
            "properties": {
                "authorid": {
                    "description": "ИД автора новости(неиспоьзуется)",
                    "type": "integer"
                },
                "child": {
                    "description": "дочерние комментарии",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Comment"
                    }
                },
                "content": {
                    "description": "содержание",
                    "type": "string"
                },
                "id": {
                    "description": "номер коментария",
                    "type": "integer"
                },
                "idnews": {
                    "description": "номер новости",
                    "type": "integer"
                },
                "parent": {
                    "description": "родительский коментарий",
                    "type": "integer"
                },
                "time": {
                    "description": "время создания новости",
                    "type": "integer"
                }
            }
        }
    },
    "tags": [
        {
            "name": "CheckedComment"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Check Comment API",
	Description:      "Проверка Коментариев на запрещенные слова",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
